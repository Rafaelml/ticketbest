<?php
/**
 * Created by PhpStorm.
 * User: rafael
 * Date: 11/4/18
 * Time: 17:37
 */
require_once ("UserNoR.php");
class UserR extends UserNoR
{
    protected $idUser;
    protected $name;
    protected $nick;
    protected $password;
    protected $status;
    protected $email;
    protected $message;
    //protected $followers;
    //protected $followings;
    //protected Tuins $numtuins;

    public function construct()
    {
        $this->db_name;
    }

    public function get($idUser = "")
    {

        if ($idUser != "") {
            $this->query = "SELECT * FROM userr WHERE idUser ='$idUser'";
            $this->get_results_from_query();
        }
        if (count($this->rows) == 1) {
            foreach ($this->rows[0] as $campo => $valor) {
                $this->$campo = $valor;
            }
            return true;
        } else {
            return false;
        }
    }

    public function getIdUser($nick ="")
    {
        if ($nick != "") {
            $this->query = "SELECT idUser FROM UserR WHERE nick ='$nick'";
            $this->get_results_from_query();
            $this->idUser =array_pop($this->rows)["idUser"];
        }
        return $this->idUser;
    }

    public function getName()
    {
        return $this->name;
    }


    public function getStatus()
    {
        return $this->status;
    }

    public function getMessage()
    {
        return $this->message;
    }

    public function revisarCorreo($email){

    }
    public function set($user_data = array())
    {
        parent::set(); // TODO: Change the autogenerated stub
        foreach ($user_data as $campo => $valor) {
            $this->$campo = $valor;
        }
        if (count($this->rows) == 1 or $this->nick[0-4] =="admin") {
            return false;
        } else {
            unset($this->rows);
            $this->query ="INSERT INTO `UserR` (`idUser`, `name`, `nick`, `password`,`telefono`, `email`) VALUES (NULL, '$this->name', '$this->nick', '$this->password','$this->telefono', '$this->email')";
            $this->execute_single_query();
            $this->getIdUser($this->nick);
            $this->createSession();
            return true;
        }
    }

    public function setCampos($user_data = array()){
        if (array_key_exists('idUser', $user_data)) {
            foreach ($user_data as $campo => $valor) {
                $this->$campo = $valor;
            }
            $this->query = "UPDATE `userr` SET `nick` = '$this->nick', `pass` = '$this->password', `repass` = 'juan4', `email` = '$this->email', `telefono` = '$this->email' WHERE `userr`.`idUser` = $this->idUser;";
            $this->execute_single_query();
            return true;
        } else {
           return false;
        }
    }
    public function settName($name)
    {
        $this->name =$name;
        $this->query = "UPDATE `userr` SET `name` = '$this->name'";
        $this->execute_single_query();
    }

    public function settNick($nick)
    {
        $this->name =$nick;
        $this->query = "UPDATE `userr` SET `name` = '$this->nick'";
        $this->execute_single_query();
    }

    public function settStatus($status)
    {
        $this->name =$status;
        $this->query = "UPDATE `userr` SET `status` = '$this->status'";
        $this->execute_single_query();
    }

    public function delUserR($userdel){
        parent::del(); // TODO: Change the autogenerated stub
        if ($userdel != '') {
            $this->query = "DELETE FROM UserR WHERE nick='$userdel'";
            $this->execute_single_query();
            return true;
        }
        else{
           return false;
        }
    }
    public function init_Session($nick ='' ,$password=''){
        if(empty($nick) || empty($password)){
            return false;
        }

        $this->query = "SELECT * FROM UserR WHERE nick = '$nick'  AND password='$password'";
        $this->get_results_from_query();
        if(count($this->rows) == 1){
            foreach ($this->rows[0] as $campo =>$valor){
                $this->$campo =$valor;
            }
            $this->createSession();
            return true;
        }
        else{
           return false;
        }
    }
    public function checkEmail($email){
            if ($email != "") {
                $this->query = "SELECT email FROM userr WHERE email ='$email'";
                $this->get_results_from_query();
                $this->email =array_pop($this->rows)["email"];
            }
            return $this->email;
    }
    private function createSession(){
        $tipo = "usuario";
        session_start();
        $_SESSION['usuario'] = $this->nick;
        $_SESSION['login'] = true;
        $_SESSION['tipo'] = $tipo;
        $_SESSION['idUser'] = $this->idUser;
        $_SESSION['pulsado'] =false;
    }
    public function createTuin($tuin,$idUser){
        $this->query = "INSERT INTO tuin (tuin, idUser) VALUES ('$tuin', '$idUser')";
        $this->execute_single_query();
    }

    public function addFollowings($idUser , $idUserFollowing){
        if($this->comprobarSiyaSigueAalguien($idUserFollowing)){
            $this->query ="INSERT INTO `followings` (`idFollowing`) VALUES ('$idUserFollowing')";
            $this->execute_single_query();
        }
        $this->query ="INSERT INTO `userfollowing` (`idUser`, `idFollowing`) VALUES ('$idUser', '$idUserFollowing')";
        $this->execute_single_query();
        $this->actuilizarFollowers($idUserFollowing , $idUser); //Ya que cuando alguien decide seguir a alguien esa persona obtiene un seguidor
     }
    private function comprobarSiyaSigueAalguien($idFollowing){
        $bol =false;
        $this->query = "SELECT idFollowing FROM followings WHERE idFollowing ='$idFollowing'";
        $this->get_results_from_query();
        if(empty($this->rows)){
            $bol = true;
        }
        return $bol;
    }
    private function comprobarSiyaleSigueAlguien($idUserFollower){
        $bol =false;
        $this->query = "SELECT idFollower FROM followers WHERE idFollower ='$idUserFollower'";
        $this->get_results_from_query();
        if(empty($this->rows)){
            $bol = true;
        }
        return $bol;
    }
    private function actuilizarFollowers($idUser , $idUserFollower){
        if(!$this->comprobarSiyaleSigueAlguien($idUserFollower)){
            $this->query ="INSERT INTO `followers` (`idFollower`) VALUES ('$idUserFollower')";
            $this->execute_single_query();
        }
        $this->query ="INSERT INTO `userfollower` (`idUser`, `idFollower`) VALUES ('$idUser', '$idUserFollower')";
        $this->execute_single_query();
        $this->query ="SELECT followers FROM `cantantes` WHERE idCantante = '$idUser'";
        $this->get_results_from_query();
        $count =array_pop($this->rows);
        $count = $count['followers'];
        $count =$count + 1;
        $this->query ="UPDATE `cantantes` SET `followers` = '$count' WHERE `cantantes`.`idCantante` = '$idUser'";
        $this->execute_single_query();

    }

    public function buscar($nombre =''){
        if(empty($nombre)){
            return false;
        }

        $this->query = "SELECT nick FROM userr WHERE nick = '$nombre'";
        $this->get_results_from_query();
        $this->nombre =array_pop($this->rows)["nick"];

        return $this->nombre;
    }
    public function delFollowing($idUser , $idUserfollowings){
        $this->query = "DELETE FROM `userfollowing` WHERE `userfollowing`.`idUser` ='$idUser' AND `userfollowing`.`idFollowing` = '$idUserfollowings'";
        $this->execute_single_query();
        $this->actualizarDelFollowers($idUser,$idUserfollowings);
        $this->query ="SELECT followers FROM `cantantes` WHERE idCantante = '$idUserfollowings'";
        $this->get_results_from_query();
        $count =array_pop($this->rows);
        $count = $count['followers'];
        $count =$count - 1;
        $this->query ="UPDATE `cantantes` SET `followers` = '$count' WHERE `cantantes`.`idCantante` = '$idUserfollowings'";
        $this->execute_single_query();
        return true;
    }
    private function actualizarDelFollowers($idUser , $idUserfollowers){
        $this->query = "DELETE FROM `userfollower` WHERE `userfollower`.`idUser` ='$idUserfollowers' AND `userfollower`.`idFollower` = '$idUser'";
        $this->execute_single_query();
    }
    public function existFollowing($idUser, $idUser_a_Seguir){
        $bool =false;
        $this->query ="SELECT * FROM `userfollowing` WHERE idUser ='$idUser' AND idFollowing = '$idUser_a_Seguir'";
        $this->get_results_from_query();
        if($this->rows){
            $bool=true;
        }
        return $bool;
    }
    public function viewCantantes($idUser){
        $this->query ="SELECT idFollowing FROM `userfollowing` WHERE `idUser` ='$idUser'";
        $this->get_results_from_query();
        $count =count($this->rows);
        $this->query ="SELECT * FROM `cantantes` WHERE";
        for($i =0; $i<$count-1; $i++){
            $b =array_pop($this->rows[$i]);
            $this->query .=" `idCantante` ='$b' OR";
        }
        if(isset($this->rows[$count-1])) {
            $b = array_pop($this->rows[$count - 1]);
            unset($this->rows);
            $this->query .=" `idCantante` ='$b'";
            $this->get_results_from_query();
        }
        return $this->rows;
    }
    public function todosCantantes($idUser){
        $this->query ="SELECT idFollowing FROM `userfollowing` WHERE `idUser` ='$idUser'";
        $this->get_results_from_query();
        $count =count($this->rows);
        if($count == 0){
            $this->query ="SELECT * FROM `cantantes`";
            $this->get_results_from_query();
        }
        else {
            $this->query = "SELECT * FROM `cantantes` WHERE";
            for ($i = 0; $i < $count - 1; $i++) {
                $b = array_pop($this->rows[$i]);
                $this->query .= " `idCantante` !='$b' AND";
            }
            if (isset($this->rows[$count - 1])) {
                $b = array_pop($this->rows[$count - 1]);
                unset($this->rows);
                $this->query .= " `idCantante` !='$b'";
                $this->get_results_from_query();
            }
        }
        return $this->rows;
    }
}
?>